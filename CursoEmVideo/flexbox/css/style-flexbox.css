.container {
	background-color: #ccc;
	height: 200px;
	display: flex; /*definindo o container como flexbox, ao ativar, automaticamente outra propriedades são add nesse container tb */
	flex-direction: row; /*1º - define a direção dos itens. valor padrão: row  | outras propriedades: column | row-reverse | column-reverse*/
	flex-wrap: nowrap; /*define se os itens terão quebra de linha. Valor padrão: nowrap | outras propriedades: ; wrap | wrap-reverse */
	/* flex-flow: row nowrap ; definir o valores  do flex-direction e flex-wrap.  */
	justify-content: flex-start; /*define o alinhamento horizontal sem alterar a ordem dos itens. Valor padrão: flex-start | outras propriedades: flex-end | center | space-between | space-around */
	align-items: stretch; /*define o alinhamento vertical. Valor padrão: stretch | flex-start | flex-end | center | baseline */
	align-content: flex-start; /*define o alinhamento vertical, porém, ele faz qnd os itens tiverem uma quebra. Valor padrão: stretch | Outros: flex-start | flex-end | center | space-between | space-around */
}

.item {
	background-color: #333;
	color: #fff;
	padding: 20px;
	margin: 5px;
	height: 30px;

	flex-grow: 1; /*Relacionado com a largura dos itens, padronizando a largura de todos */
	flex-basis: 300px; ; /*Define a largura inicial de cada item.*/
	flex-shrink: 1 ; /*Capacidade de redução do item*/
	flex: 1 1 300px; /*é a forma resumida de declarar as propriedades*/
}

/*.article-01 {order: 3;} Order: Alterar a ordem dos itens.
.article-02 {order: 1; align-self: auto;} align-self: Alterar a alinhamento individual dos itens. Propriedades: center |flex-start | flex-end | baseline | stretch
.article-03 {oflex-grow: 3;}
.article-04 {order: 4;}*/

.article-01 {flex-shrink: 3;}
.article-02 {}
.article-03 {}
.article-04 {}